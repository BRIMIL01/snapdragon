<link rel="stylesheet" type="text/css" href="/jasmine-core/jasmine.css">
<script type="text/javascript" src="/jasmine-core/jasmine.js"></script>
<script type="text/javascript" src="/jasmine-core/jasmine-html.js"></script>

<% if @suite.formatter == "junit" %>
<script type="text/javascript" src="/resources/SnapdragonJUnitReporter.js"></script>
<% else %>
<script type="text/javascript" src="/resources/SnapdragonConsoleReporter.js"></script>
<% end %>

<!-- The implementation code the spec files being tested need -->
<% @suite.require_file_relative_url_paths.each do |path| %>
<script type="text/javascript" src="<%= path %>"></script>
<% end %>

<!-- The spec files -->
<% @suite.spec_files.each do |spec| %>
<script type="text/javascript" src="<%= spec.relative_url_path %>"></script>
<% end %>

<script type="text/javascript">
  (function() {
    var jasmineEnv = jasmine.getEnv();
    jasmineEnv.updateInterval = 1000;

    <% if @suite.formatter == "junit" %>
      var snapdragonJUnitReporter = new jasmine.SnapdragonJUnitReporter();
      jasmineEnv.addReporter(new jasmine.TrivialReporter());
      jasmineEnv.addReporter(snapdragonJUnitReporter);
    <% else %>
      var htmlReporter = new jasmine.HtmlReporter();
      jasmineEnv.addReporter(htmlReporter);
      var snapdragonConsoleReporter = new jasmine.SnapdragonConsoleReporter({});
      jasmineEnv.addReporter(snapdragonConsoleReporter);

      jasmineEnv.specFilter = function(spec) {
        return htmlReporter.specFilter(spec);
      };
    <% end %>

    var currentWindowOnload = window.onload;

    window.onload = function() {
      if (currentWindowOnload) {
        currentWindowOnload();
      }
      execJasmine();
    };

    function execJasmine() {
      jasmineEnv.execute();
    }

  })();
</script>
